"use client";

import { AppBar, Toolbar, Typography, Button, Container, CssBaseline } from "@mui/material";
import { ThemeProvider } from "@mui/material/styles";
import Link from "next/link";
// import theme from "./theme";

// Import CSS module
import styles from "./layout.module.css";
import theme from "@/utils/theme";

export default function RootLayout({ children }: { children: React.ReactNode }) {
  return (
    <html lang="en">
      <body style={{ margin: 0 }}>
        <ThemeProvider theme={theme}>
          <CssBaseline />

          {/* Header */}
          <AppBar position="static" className={styles.header}>
            <Toolbar>
              <Typography variant="h6" sx={{ flexGrow: 1 }}>
                My Portfolio
              </Typography>
              <Button color="inherit" component={Link} href="/">
                Home
              </Button>
              <Button color="inherit" component={Link} href="/about">
                About
              </Button>
              <Button color="inherit" component={Link} href="/contact">
                Contact
              </Button>
            </Toolbar>
          </AppBar>

          {/* Main Content */}
          <Container className={styles.mainContent}>
            <main>{children}</main>
          </Container>

          {/* Footer */}
          <footer className={styles.footer}>
            <Typography variant="body2">Â© 2025 My Portfolio</Typography>
          </footer>
        </ThemeProvider>
      </body>
    </html>
  );
}


// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en">
//       <body className={`${geistSans.variable} ${geistMono.variable}`}>
//         {children}
//       </body>
//     </html>
//   );
// }